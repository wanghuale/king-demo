<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
 		http://www.springframework.org/schema/aop/spring-aop.xsd">

	 <!-- 扫描注解Bean -->
    <context:component-scan base-package="com.king.controller;com.king.*.controller;com.king.*.manangement;com.king.*.workflow">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    	<context:include-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>
    <context:property-placeholder  ignore-resource-not-found="true"
                                    location="classpath:resource/*.properties,
                                  file:/root/web_home/manager/resource/*.properties" />
    <bean id="freemarkerConfiguration"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="location" value="classpath:resource/freemarker.properties" />

    </bean>
	
    
	<!-- 当在web.xml 中   DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，能映射静态资源 -->
    <mvc:default-servlet-handler/>
    <!-- mvc:resources增加缺少这个配置 controller 失效 -->
    <mvc:annotation-driven >
    	 <!-- <mvc:argument-resolvers>
            <bean class="com.king.bind.method.CurrentUserMethodArgumentResolver"/>
         </mvc:argument-resolvers> -->
         <mvc:message-converters>  
            <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">  
                <property name="supportedMediaTypes">  
                    <list>  
                        <value>application/json;charset=UTF-8</value>  
                    </list>  
                </property>  
            </bean>  
        </mvc:message-converters>
     </mvc:annotation-driven>
	<!-- 静态资源映射 -->
    <mvc:resources mapping="/static/**" location="/static/"/>
    
    <!-- freemaker  Directive-->

    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver"
          p:prefix="${TPL}" p:suffix=".ftl">

        <property name="cache" value="false" />
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
        <property name="contentType" value="text/html;charset=UTF-8"></property>
        <property name="exposeRequestAttributes" value="true" />
        <property name="allowSessionOverride" value="true"/>
        <property name="exposeSessionAttributes" value="true" />
        <property name="exposeSpringMacroHelpers" value="true" />
        <property name="requestContextAttribute" value="request" />
        <property name="order" value="0"></property>
    </bean>
    <bean id="conversionService"
          class="org.springframework.format.support.FormattingConversionServiceFactoryBean"/>
    <!-- <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="maxUploadSize" value="20000000"/>
    </bean> -->
	 <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
          
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>*/*</value>
                        </list>
                    </property>
                </bean>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="writeAcceptCharset" value="false"/>
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/plain; charset=UTF-8</value>
                            <value>text/xml; charset=UTF-8</value>
                            <value>application/json; charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
                <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                    <property name="features">
                        <array value-type="com.alibaba.fastjson.serializer.SerializerFeature">
                            <value>WriteMapNullValue</value>
                        </array>
                    </property>
                </bean>
            </list>
        </property>
        
    </bean>
    <!-- <bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />
       <bean id="freemarkerConfig"
              class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">-->

    <bean id="freemarkerConfig"
          class="com.king.shiro.tag.ShiroTagFreeMarkerConfigurer"> 
        <property name="templateLoaderPath" value="/WEB-INF/ftl/" />
        <property name="defaultEncoding" value="UTF-8" />
        <property name="freemarkerVariables">
            <map>
                
            </map>
        </property>
        <property name="freemarkerSettings" ref="freemarkerConfiguration">

        </property>
    </bean>

    <aop:config proxy-target-class="true"></aop:config>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

	
</beans>